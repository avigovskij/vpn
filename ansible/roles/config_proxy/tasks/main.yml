---
#- name: Tinyproxy | Prepare docker
#  block:
#    - name: Tinyproxy | Install docker
#      ansible.builtin.include_role:
#        name: docker_setup

- name: Tinyrpoxy | Push systemd unit to server
  ansible.builtin.template:
    src:


- name: Tinyproxy | Copy config to server
  ansible.builtin.template:
    src: proxy_config.j2
    dest: /etc/config_proxy/sample.conf
    mode: 0644

- name: Tinyproxy | Start tinyproxy server
  ansible.builtin.command:
    cmd: "tinyproxy -d -c /etc/config_proxy/sample.conf"
#- name: Tinyproxy | Copy dockerfile to server
#  ansible.builtin.copy:
#    src: tinyproxy.Dockerfile
#    dest: /etc/config_proxy/Dockerfile
#    mode: 0644
#
#- name: Tinyproxy | Build docker image locally
#  ansible.builtin.command:
#    cmd: "docker build -t {{ tinyproxy_docker_image_tag }} /etc/config_proxy"
#    chdir: /etc/config_proxy
#
#- name: Tinyproxy | Check if port is busy
#  ansible.builtin.shell: |
#      {{ 'docker container ls --format "{{.ID}} - {{.Ports}}" | grep "0.0.0.0:"' + (tinyproxy_container_outer_port | string) }}
#  register: docker_ls_output
#  failed_when: docker_ls_output.rc is not in [0, 1]
#
#- name: Stop container
#  ansible.builtin.shell: 'docker container stop {{ docker_ls_output.stdout | regex_search("\w+") }}'
#  when: docker_ls_output.stdout
#
#- name: Tinyproxy | Start docker container
#  ansible.builtin.command:
#    cmd: "
#      docker run -d -p \
#        {{ tinyproxy_container_outer_port }}:{{ tinyproxy_container_inner_port }} \
#        {{ tinyproxy_docker_image_tag }}
#    "
